{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "aagName": {
            "type": "string"
        },
        "sku": {
            "type": "object"
        },
        "subnetId": {
            "type": "string"
        },
        "publicIPId": {
            "type": "string"
        },
        "autoscaleConfiguration": {
            "type": "object"
        },
        "frontEndPorts": {
            "type": "array"
        },
        "backendAddressPools": {
            "type": "array"
        },
        "backendHttpSettingsCollection": {
            "type": "array"
        }
    },
    "functions": [],
    "variables": {
        "applicationGatewayId": "[resourceId('Microsoft.Network/applicationGateways', parameters('aagName')) ]",
        "frontendIPConfigurations": [
            {
                "name": "appGatewayFrontendIP",
                "properties": {
                    "privateIPAllocationMethod": "Dynamic",
                    "publicIPAddress": {
                        "id": "[parameters('publicIPId')]"
                    }
                }
            }
        ],
        "gatewayIPConfigurations": [
            {
                "name": "agw-ipconfig",
                "properties": {
                    "subnet": {
                        "id": "[parameters('subnetId')]"
                    }
                }
            }
        ]
    },
    "resources": [
        {
            "type": "Microsoft.Network/applicationGateways",
            "apiVersion": "2023-05-01",
            "name": "[parameters('aagName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "managed-by-k8s-ingress": "true"
            },
            "properties": {
                "sku": "[parameters('sku')]",
                "gatewayIPConfigurations": "[variables('gatewayIPConfigurations')]",
                "frontendIPConfigurations": "[variables('frontendIPConfigurations')]",
                "frontendPorts": "[parameters('frontEndPorts')]",
                "backendAddressPools": "[parameters('backendAddressPools')]",
                "backendHttpSettingsCollection": "[parameters('backendHttpSettingsCollection')]",
                "autoscaleConfiguration": "[parameters('autoscaleConfiguration')]",
                "httpListeners": [
                    {
                        "name": "httpListener",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(variables('applicationGatewayId'), '/frontendIPConfigurations/', variables('frontendIPConfigurations')[0].name)]"
                            },
                            "frontendPort": {
                                "id": "[concat(variables('applicationGatewayId'), '/frontendPorts/', parameters('frontEndPorts')[0].name)]"
                            },
                            "protocol": "Http"
                        }
                    }
                ],
                "requestRoutingRules": [
                    {
                        "name": "rule1",
                        "properties": {
                            "priority": 1,
                            "backendAddressPool": {
                                "id": "[concat(variables('applicationGatewayId'), '/backendAddressPools/', parameters('backendAddressPools')[0].name)]"
                            },
                            "backendHttpSettings": {
                                "id": "[concat(variables('applicationGatewayId'), '/backendHttpSettingsCollection/', parameters('backendHttpSettingsCollection')[0].name)]"
                            },
                            "httpListener": {
                                "id": "[concat(variables('applicationGatewayId'), '/httpListeners/httpListener')]"
                            }
                        }
                    }
                ]
            }
        }
    ],
    "outputs": {
        "aagId": {
            "type": "string",
            "value": "[resourceId('Microsoft.Network/applicationGateways', parameters('aagName'))]"
        }
    }
}